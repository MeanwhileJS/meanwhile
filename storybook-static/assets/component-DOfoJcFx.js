import{j as i}from"./jsx-runtime-DBEcOq3S.js";import{r as l}from"./index-DtJulBIN.js";import{u as p,c as g}from"./index-CE5k4Bb4.js";import{P as m}from"./index-kfRDelSZ.js";import{c as v}from"./index-Bb4qSo10.js";import{c as h}from"./utils-B06rK7pa.js";var b="Toggle",d=l.forwardRef((e,a)=>{const{pressed:t,defaultPressed:r=!1,onPressedChange:s,...f}=e,[n=!1,c]=p({prop:t,onChange:s,defaultProp:r});return i.jsx(m.button,{type:"button","aria-pressed":n,"data-state":n?"on":"off","data-disabled":e.disabled?"":void 0,...f,ref:a,onClick:g(e.onClick,()=>{e.disabled||c(!n)})})});d.displayName=b;var u=d;const z=v("inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-zinc-100 hover:text-zinc-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-zinc-100 data-[state=on]:text-zinc-900 dark:ring-offset-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-400 dark:focus-visible:ring-zinc-300 dark:data-[state=on]:bg-zinc-800 dark:data-[state=on]:text-zinc-50",{variants:{variant:{default:"bg-transparent",outline:"border border-zinc-200 bg-transparent hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:hover:bg-zinc-800 dark:hover:text-zinc-50"},size:{default:"h-10 px-3",sm:"h-9 px-2.5",lg:"h-11 px-5"}},defaultVariants:{variant:"default",size:"default"}}),o=l.forwardRef(({className:e,variant:a,size:t,...r},s)=>i.jsx(u,{ref:s,className:h(z({variant:a,size:t,className:e})),...r}));o.displayName=u.displayName;try{o.displayName="Toggle",o.__docgenInfo={description:"",displayName:"Toggle",props:{asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}},pressed:{defaultValue:null,description:"The controlled state of the toggle.",name:"pressed",required:!1,type:{name:"boolean"}},defaultPressed:{defaultValue:null,description:"The state of the toggle when initially rendered. Use `defaultPressed`\nif you do not need to control the state of the toggle.\n@defaultValue false",name:"defaultPressed",required:!1,type:{name:"boolean"}},onPressedChange:{defaultValue:null,description:"The callback that fires when the state of the toggle changes.",name:"onPressedChange",required:!1,type:{name:"(pressed: boolean) => void"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"outline"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"sm"'},{value:'"lg"'}]}}}}}catch{}export{d as T,o as a,z as t};
